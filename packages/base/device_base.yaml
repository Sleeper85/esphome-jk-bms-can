# Updated : 2024.05.17
# Version : 2.1.1
# GitHub  : https://github.com/Sleeper85/esphome-jk-bms-can

# This YAML is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>.

esphome:
  name: ${name}
  # friendly_name: ${name}
  # comment: 'Solar system braining and more !'
  # area: 'Technical local'
  project:
    name: esphome.smartbms
    version: "2.1.1"
  min_version: 2023.9.0

time:
  # https://esphome.io/components/time/homeassistant
  - platform: homeassistant
    id: my_time

button:
  # https://esphome.io/components/button/restart
  - platform: restart
    name: ${name} ESP32 Restart
    entity_category: config

binary_sensor:
  # https://esphome.io/components/binary_sensor/status  
  - platform: status
    name: ${name} ESP32 Online Status
    id: esp32_online_status
    entity_category: diagnostic

sensor:
  # +--------------------------------------+
  # | Uptime sensor                        |
  # +--------------------------------------+
  - platform: uptime
    name: ${name} Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    entity_category: diagnostic
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

text_sensor:
  # +--------------------------------------+
  # | Uptime Human Readable                |
  # +--------------------------------------+
  - platform: template
    name: ${name} Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
    entity_category: diagnostic