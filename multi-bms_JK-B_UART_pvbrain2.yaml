# Updated : 2024.08.28
# Version : 1.4.4
# GitHub  : https://github.com/SeByDocKy/pvbrain2
# GitHub  : https://github.com/Sleeper85/esphome-yambms

# YamBMS ( Yet another multi-BMS Merging Solution )

# This YAML is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>.

substitutions:
  name: 'pvbrain2'

  ###### For extended UART ports with the 2 WK2168 ######

  uart0_baudrate: '2400'    #WKS         {RJ45-UART0} 
  uart1_baudrate: '38400'   #JSY193
  uart2_baudrate: '19200'   #smartshunt
  uart3_baudrate: '9600'    #SRNE        {RJ45-UART3} 
  uart4_baudrate: '115200'  #JK-BMS 1
  uart5_baudrate: '115200'  #JK-BMS 2
  uart6_baudrate: '115200'  #Pylontech
  uart7_baudrate: '9600'    #EPEVER      {RJ45-UART7} 
  
  # 'i2c' or 'spi'  go into pvbrain2/base/device_base.yaml to select I2C or SPI UART Hub file
  # If SPI selected, don't forget to jump/solder the two pairs of pin together located back of WK2168 boards 
  uart_hub_bus: 'spi'

logger:
  level: WARN # DEBUG / INFO / WARN

ota:
  platform: esphome
  
# Please use the native `api` component instead of the `mqtt` section.
# If you use Home Assistant, the native API is more lightweight.
# If there is no HA server connected to this API, the ESP32 reboots every 15 minutes to try to resolve the problem.
# If you don't use Home Assistant please uncomment the "reboot_timeout: 0s" option.
api:
  reboot_timeout: 0s

# If you don't want to use ESPHome's native API you can use MQTT instead.
# In this case don't forget to remove the 'api:' section.
# mqtt:
#  broker: !secret mqtt_host
#  username: !secret mqtt_username
#  password: !secret mqtt_password
#  id: mqtt_client

# In the event of problems with the WiFi network, the ESP32 will reboot every 15 minutes to try to resolve the problem.
# If we don't want to connect the ESP32 to the WiFi network please remove the 4 lines below.
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret domain
  ap:
    ssid: "YamBMS Fallback Hotspot"
    password: "Y4mBM$85"

captive_portal:

# Please note that enabling this component will take up a lot of memory and may decrease
# stability and be the cause of reboot depending on the capabilities of the board used.
#web_server:
#  port: 80
#  log: false
#  ota: false

# +--------------------------------------+
# | PVbrain2 packages                    |
# +--------------------------------------+
packages:
  device_board: !include packages/board/board_pvbrain2.yaml
  device_base: !include packages/base/device_base.yaml

  # BUS
  # bus_i2c0: !include pvbrain2/base/device_bus_i2c0.yaml
  bus_spi1: !include pvbrain2/base/device_bus_spi1.yaml
  # bus_dallas: !include pvbrain2/base/device_bus_one_wire.yaml

  # Devices
  device_uart_esp: !include pvbrain2/base/device_uart_esp.yaml
  device_wk2168_spi: !include pvbrain2/base/device_wk2168_spi.yaml
  # device_wk2168_i2c: !include pvbrain2/base/device_wk2168_i2c.yaml
  # device_sx1509: !include pvbrain2/base/device_sx1509.yaml
  device_canbus_node1: !include pvbrain2/base/device_canbus_esp32can.yaml
  device_canbus_node2: !include pvbrain2/base/device_canbus_mcp2515.yaml

# +--------------------------------------+
# | YamBMS packages                      |
# +--------------------------------------+

  # shunt1: !include
  #   file: packages/shunt/shunt_victron_smartshunt.yaml # shunt_junctek_khf.yaml
  #   vars:
  #     # YamBMS ID
  #     yambms_id: 'yambms1'
  #     # Shunt vars
  #     shunt_id: '1' # must be a number
  #     shunt_name: 'Shunt 1'
  #     shunt_update_interval: '3s'
  #     shunt_combine_interval: '1s'
  #     shunt_uart_id: uart_esp_0

  bms1: !include
    file: packages/bms/bms_JK-B_UART_minimal_pvbrain2.yaml
    vars:
      # YamBMS ID
      yambms_id: 'yambms1'
      # BMS vars
      bms_id: '1' # must be a number
      bms_name: 'JK-BMS 1'
      bms_update_interval: '2s'
      bms_combine_interval: '1s'
      bms_uart_id: uart_${uart_hub_bus}_4
  
  bms2: !include
    file: packages/bms/bms_JK-B_UART_minimal_pvbrain2.yaml
    vars:
      # YamBMS ID
      yambms_id: 'yambms1'
      # BMS vars
      bms_id: '2' # must be a number
      bms_name: 'JK-BMS 2'
      bms_update_interval: '2s'
      bms_combine_interval: '1s'
      bms_uart_id: uart_${uart_hub_bus}_5

  yambms1: !include
    file: packages/yambms/yambms.yaml
    vars:
      # Please read the cut-off charging logic README to understand how the YamBMS works
      yambms_id: 'yambms1'
      yambms_name: 'YamBMS 1'
      yambms_update_interval: '1s'
      # Input numbers can be displayed as a slider or an input box, options are 'slider' or 'box'.
      yambms_input_number_mode: 'slider'
      # Please check and fill in the options below correctly according to your battery chemistry and number of cells in series.
      # These parameters are important and used for charging logic.
      # Battery Chemistry
      yambms_battery_chemistry: '1' # 1-LFP | 2-Li-ion | 3-LTO
      # Number of cells in series
      yambms_cell_count: '16'
      # Bulk / Absorption Voltage : corresponds to the Bulk voltage that will be used to charge the battery. (LFP : 55.2V = 3.45V/Cell for 16S battery)
      yambms_bulk_v: '55.2'
      # Float Voltage : corresponds to the voltage at which the battery would be maintained at the end of charge. (LFP : 53.6V = 3.35V/Cell for 16S battery)
      yambms_float_v: '53.6'
      # Rebulk voltage, voltage from which a new Bulk charge can start. (LFP : 52.8V = 3.3V/Cell for 16S battery)
      yambms_rebulk_v: '52.8'
      # Maximum time in minutes that the cut-off step can last before charging is complete
      # If your cells are properly balanced this step ends at the fastest after the `cut-off timer`
      # This timer can be deactivated with a switch
      yambms_eoc_timer: '30'
      # Time in seconds during which the end of charge conditions must be respected (cut-off + cells not equalizing)
      yambms_cutoff_timer: '60'
      # Maximum charging cycles is used to calculate the battey SOH, LF280K v3 =8000.0, LF280K v2 =6000.0, LF280=3000.0 (decimal is required)
      yambms_max_cycles: '6000.0'

  canbus1: !include
    file: packages/yambms/yambms_canbus.yaml
    vars:
      # YamBMS ID
      yambms_id: 'yambms1'
      # CANBUS vars
      canbus_id: 'canbus1'
      canbus_name: 'CANBUS 1'
      canbus_node_id: 'canbus_node1'
      canbus_light_id: 'led_light_1' # on_board_light_io48
      # The CANBUS link will be considered down if no response from the inverter (ID 0x305) for 5s
      # The Deye inverter sends the ACK (can_id 0x305) only when it receives the can_id 0x356
      canbus_link_timer: '5'

# +--------------------------------------+
# | DEBUG ( logger level must be DEBUG ) |
# +--------------------------------------+

  device_debug: !include
    file: pvbrain2/base/device_debug.yaml
    vars:
      debug_name: 'Debug'
      debug_update_interval: '5s'
      # Size of your PSRAM in bits
      # 8Mb='8388608' | 6Mb='6291456' | 4Mb='4194304' | 2Mb='2097152' | NoPSRAM='0'
      debug_psram_size: '8388608'
